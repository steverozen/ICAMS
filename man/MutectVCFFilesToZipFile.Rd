% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/shiny_related_functions.R
\name{MutectVCFFilesToZipFile}
\alias{MutectVCFFilesToZipFile}
\title{Create a zip file which contains catalogs and plot PDFs from Mutect VCF files}
\usage{
MutectVCFFilesToZipFile(
  dir,
  zipfile,
  ref.genome,
  trans.ranges = NULL,
  region = "unknown",
  names.of.VCFs = NULL,
  tumor.col.names = NA,
  base.filename = "",
  flag.mismatches = 0,
  return.annotated.vcfs = FALSE,
  suppress.discarded.variants.warnings = TRUE
)
}
\arguments{
\item{dir}{Pathname of the directory which contains \strong{only} the Mutect
VCF files. Each Mutect VCF \strong{must} have a file extension ".vcf" (case
insensitive) and share the \strong{same} \code{ref.genome} and
\code{region}.}

\item{zipfile}{Pathname of the zip file to be created.}

\item{ref.genome}{A \code{ref.genome} argument as described in
\code{\link{ICAMS}}.}

\item{trans.ranges}{Optional. If \code{ref.genome} specifies one of the
\code{\link{BSgenome}} object 
\enumerate{
  \item \code{\link[BSgenome.Hsapiens.1000genomes.hs37d5]{BSgenome.Hsapiens.1000genomes.hs37d5}}
  \item \code{\link[BSgenome.Hsapiens.UCSC.hg38]{BSgenome.Hsapiens.UCSC.hg38}}
  \item \code{\link[BSgenome.Mmusculus.UCSC.mm10]{BSgenome.Mmusculus.UCSC.mm10}}
}
then the function will infer \code{trans.ranges} automatically. Otherwise,
user will need to provide the necessary \code{trans.ranges}. Please refer to
\code{\link{TranscriptRanges}} for more details.
If \code{is.null(trans.ranges)} do not add transcript range
information.}

\item{region}{A character string designating a genomic region;
see \code{\link{as.catalog}} and \code{\link{ICAMS}}.}

\item{names.of.VCFs}{Optional. Character vector of names of the VCF files.
The order of names in \code{names.of.VCFs} should match the order of VCFs
listed in \code{dir}. If \code{NULL}(default), this function will remove
all of the path up to and including the last path separator (if any) in
\code{dir} and file paths without extensions (and the leading dot) will be
used as the names of the VCF files.}

\item{tumor.col.names}{Optional. Character vector of column names in VCFs which contain
the tumor sample information. The order of names in \code{tumor.col.names}
should match the order of VCFs listed in \code{dir}. If
\code{tumor.col.names} is equal to \code{NA}(default), this function will
use the 10th column in all the VCFs to calculate VAFs.
See \code{\link{GetMutectVAF}} for more details.}

\item{base.filename}{Optional. The base name of the CSV and PDF files to be
produced; multiple files will be generated, each ending in
\eqn{x}\code{.csv} or \eqn{x}\code{.pdf}, where \eqn{x} indicates the type
of catalog.}

\item{flag.mismatches}{Deprecated. If there are ID variants whose \code{REF}
do not match the extracted sequence from \code{ref.genome}, the function
will automatically discard these variants and an element
\code{discarded.variants} will appear in the return value. See
\code{\link{AnnotateIDVCF}} for more details.}

\item{return.annotated.vcfs}{Logical. Whether to return the annotated VCFs
with additional columns showing mutation class for each variant. Default is
FALSE.}
}
\description{
Create 3 SBS catalogs (96, 192, 1536), 3 DBS catalogs (78, 136, 144) and
Indel catalog from the Mutect VCFs specified by \code{dir}, save the catalogs
as CSV files, plot them to PDF and generate a zip archive of all the output files.
}
\details{
This function calls \code{\link{MutectVCFFilesToCatalog}},
\code{\link{PlotCatalogToPdf}}, \code{\link{WriteCatalog}} and
\code{\link[zip]{zipr}}.
}
\section{Value}{

A list containing the following objects:
\itemize{
\item \code{catSBS96}, \code{catSBS192}, \code{catSBS1536}: Matrix of
3 SBS catalogs (one each for 96, 192, and 1536).
\item \code{catDBS78}, \code{catDBS136}, \code{catDBS144}: Matrix of
3 DBS catalogs (one each for 78, 136, and 144).
\item \code{catID}: Matrix of ID (small insertion and deletion) catalog.
\item \code{discarded.variants}:
\strong{Only appearing when} there are variants that were excluded in the
analysis.
A list of elements:
\itemize{
\item \code{SBS}: SBS variants whose pentanucleotide context contains "N".
\item \code{DBS}: DBS variants whose tetranucleotide context contains "N".
\item \code{ID}: ID variants discarded that can belong to the following
categories:
\itemize{
\item Variants which have empty REF or ALT allels.
\item Variants whose REF allels do not match the extracted sequence from
\code{ref.genome}.
\item Variants which cannot be categorized according to the canonical
representation. See catalog.row.order$ID for the canonical
representation.
}
\item \code{other.subs}: Variants involving three or more nucleotides (e.g. ACT >
TGA or AACT > GGTA) and complex indels.
\item \code{multiple.alt}: Variants with multiple alternative alleles, for
example ACA mutated to both AGA and ATA at the same position.
\item \code{not.analyzed}: Variants discarded immediately after reading in
the VCFs:
\itemize{
\item Duplicated "CHROM" and "POS" values.
\item Chromosome names that contain "#".
\item Chromosome names that contain "GL".
\item Chromosome names that contain "KI".
\item Chromosome names that contain "random".
\item Chromosome names that contain "Hs".
\item Chromosome names that contain "M".
}
}
\item \code{annotated.vcfs}:
\strong{Only appearing when} \code{return.annotated.vcfs} = TRUE.
A list of elements:
\itemize{
\item \code{SBS}: SBS VCF annotated by \code{\link{AnnotateSBSVCF}} with
three new columns \code{SBS96.class}, \code{SBS192.class} and
\code{SBS1536.class} showing the mutation class for each SBS variant.
\item \code{DBS}: DBS VCF annotated by \code{\link{AnnotateDBSVCF}} with
three new columns \code{DBS78.class}, \code{DBS136.class} and
\code{DBS144.class} showing the mutation class for each DBS variant.
\item \code{ID}: ID VCF annotated by \code{\link{AnnotateIDVCF}} with one
new column \code{ID.class} showing the mutation class for each
ID variant.
}
}

If \code{trans.ranges} is not provided by user and cannot be inferred by
ICAMS, SBS 192 and DBS 144 catalog will not be generated. Each catalog has
attributes added. See \code{\link{as.catalog}} for more details.
}

\section{ID classification}{

See
\url{https://github.com/steverozen/ICAMS/raw/master/data-raw/PCAWG7_indel_classification_2017_12_08.xlsx}
for additional information on ID (small insertion and deletion) mutation
classification.

See the documentation for \code{\link{Canonicalize1Del}} which first handles
deletions in homopolymers, then handles deletions in simple repeats with
longer repeat units, (e.g. \code{CACACACA}, see
\code{\link{FindMaxRepeatDel}}), and if the deletion is not in a simple
repeat, looks for microhomology (see \code{\link{FindDelMH}}).

See the code for unexported function \code{\link{CanonicalizeID}}
and the functions it calls for handling of insertions.
}

\section{Note}{

SBS 192 and DBS 144 catalogs include only mutations in transcribed regions.
In ID (small insertion and deletion) catalogs, deletion repeat sizes range
from 0 to 5+, but for plotting and end-user documentation deletion repeat
sizes range from 1 to 6+.
}

\section{Comments}{

To add or change attributes of the catalog, you can use function
\code{\link[base]{attr}}. \cr For example, \code{attr(catalog, "abundance")
<- custom.abundance}.
}

\examples{
dir <- c(system.file("extdata/Mutect-vcf",
                     package = "ICAMS"))
if (requireNamespace("BSgenome.Hsapiens.1000genomes.hs37d5", quietly = TRUE)) {
  catalogs <- 
    MutectVCFFilesToZipFile(dir, 
                            zipfile = file.path(tempdir(), "test.zip"),
                            ref.genome = "hg19", 
                            trans.ranges = trans.ranges.GRCh37,
                            region = "genome",
                            base.filename = "Mutect")
  unlink(file.path(tempdir(), "test.zip"))}
}
